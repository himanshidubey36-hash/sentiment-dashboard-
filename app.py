# -*- coding: utf-8 -*-
"""App.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15ZHJ3WP6hqVMY7Coyt5Kx9mOwMCNAxVO
"""

import streamlit as st
import pandas as pd
import plotly.express as px

# Page config
st.set_page_config(
    page_title="Nifty 50 Sentiment Dashboard",
    page_icon="📊",
    layout="wide"
)

# Title
st.title("📊 Nifty 50 News Sentiment Analysis Dashboard")
st.markdown("---")

# Load data with error handling
@st.cache_data
def load_data():
    try:
        df = pd.read_excel('sentiment_analysis_results.xlsx')
        top5 = pd.read_excel('selected_5_companies.xlsx')
        return df, top5
    except Exception as e:
        st.error(f"Error loading data: {e}")
        return pd.DataFrame(), pd.DataFrame()

df, top5 = load_data()

# Sidebar
st.sidebar.header("📌 Dashboard Info")
st.sidebar.info(
    "This dashboard displays sentiment analysis results "
    "from news articles for Nifty 50 companies."
)

if st.sidebar.button("🔄 Refresh Data"):
    st.cache_data.clear()
    st.rerun()

# Main Dashboard
if not df.empty and 'Company' in df.columns and 'sentiment' in df.columns:

    # Metrics Row
    col1, col2, col3, col4 = st.columns(4)

    with col1:
        st.metric("📰 Total Articles", len(df))

    with col2:
        st.metric("🏢 Companies Analyzed", df['Company'].nunique())

    with col3:
        avg_sentiment = df['sentiment'].mean()
        st.metric("📈 Avg Sentiment", f"{avg_sentiment:.3f}")

    with col4:
        positive_count = (df['sentiment'] > 0.05).sum()
        st.metric("✅ Positive Articles", positive_count)

    st.markdown("---")

    # Sentiment Bar Chart
    st.subheader("📊 Average Sentiment by Company")

    agg = df.groupby('Company', as_index=False)['sentiment'].mean()
    agg = agg.sort_values('sentiment', ascending=False)

    fig = px.bar(
        agg,
        x='Company',
        y='sentiment',
        color='sentiment',
        color_continuous_scale='RdYlGn',
        title='Company Sentiment Scores (Higher is Better)',
        labels={'sentiment': 'Sentiment Score', 'Company': 'Company Name'},
        height=500
    )
    fig.update_layout(xaxis_tickangle=-45)
    st.plotly_chart(fig, use_container_width=True)

    st.markdown("---")

    # Top 5 Companies Section
    st.subheader("🏆 Top 5 Companies Selected for Analysis")

    if not top5.empty:
        st.dataframe(
            top5,
            use_container_width=True,
            hide_index=True
        )

        st.info("💡 These companies were selected based on positive sentiment scores and news coverage.")
    else:
        st.warning("Top 5 companies data not available.")

    st.markdown("---")

    # Raw Data in Expandable Section
    with st.expander("📰 View All Articles (Click to Expand)"):
        st.dataframe(df, use_container_width=True)

        # Download button
        csv = df.to_csv(index=False).encode('utf-8')
        st.download_button(
            label="⬇️ Download Full Data as CSV",
            data=csv,
            file_name='sentiment_data.csv',
            mime='text/csv',
        )

else:
    st.error("❌ Required data not found or columns missing.")
    st.info("Please ensure the Excel files contain 'Company' and 'sentiment' columns.")

# Footer
st.markdown("---")
st.caption("Built with Streamlit • Data from Google News RSS • Sentiment Analysis using VADER")